{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "accountName": {
      "type": "string",
      "defaultValue": "[concat('cosmos-sql-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Cosmos DB account name, max length 44 characters, lowercase"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the Cosmos DB account."
      }
    },
    "regions": {
      "type": "array",
      "metadata": {
        "description": "An array of strings specifying the regions for the databases. The first item in the array must match the resourceGroup location."
      },
      "defaultValue": [
        "[resourceGroup().location]"
      ]
    },
    "defaultConsistencyLevel": {
      "type": "string",
      "defaultValue": "Session",
      "allowedValues": [
        "Eventual",
        "ConsistentPrefix",
        "Session",
        "BoundedStaleness",
        "Strong"
      ],
      "metadata": {
        "description": "The default consistency level of the Cosmos DB account."
      }
    },
    "maxStalenessPrefix": {
      "type": "int",
      "minValue": 10,
      "defaultValue": 100000,
      "maxValue": 2147483647,
      "metadata": {
        "description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
      }
    },
    "maxIntervalInSeconds": {
      "type": "int",
      "minValue": 5,
      "defaultValue": 300,
      "maxValue": 86400,
      "metadata": {
        "description": "Max lag time (minutes). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
      }
    },
    "automaticFailover": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Enable automatic failover for regions"
      }
    },
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "The name for the database"
      }
    },
    "containers": {
      "type": "array",
      "defaultValue": [
        {
          "id": "defaultContainer",
          "partitionKey": {
            "paths": [
              "/myPartitionKey"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/myPathToNotIndex/*"
              }
            ],
            "compositeIndexes": [
              [
                {
                  "path": "/name1",
                  "order": "ascending"
                },
                {
                  "path": "/ag1e",
                  "order": "descending"
                }
              ]
            ],
            "spatialIndexes": [
              {
                "path": "/path/to/geojson/property/?",
                "types": [
                  "Point",
                  "Polygon",
                  "MultiPolygon",
                  "LineString"
                ]
              }
            ]
          },
          "defaultTtl": 86400,
          "uniqueKeys": [
            {
              "paths": [
                "/phoneNumber"
              ]
            }
          ]
        }
      ]
    },
    "autoscaleMaxThroughput": {
      "type": "int",
      "defaultValue": 4000,
      "minValue": 4000,
      "maxValue": 1000000,
      "metadata": {
        "description": "Maximum throughput for the container"
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "application": "coolapp",
        "owner": "Bill Contoso"
      }
    }
  },
  "variables": {
    "uniqueString": "[uniqueString(subscription().id, parameters('accountName'))]",
    "thename": "[concat(parameters('accountName'), '-', variables('uniqueString'), variables('uniqueString'))]",
    "accountName": "[toLower(take(variables('thename'), 43) )]",
    "consistencyPolicy": {
      "Eventual": {
        "defaultConsistencyLevel": "Eventual"
      },
      "ConsistentPrefix": {
        "defaultConsistencyLevel": "ConsistentPrefix"
      },
      "Session": {
        "defaultConsistencyLevel": "Session"
      },
      "BoundedStaleness": {
        "defaultConsistencyLevel": "BoundedStaleness",
        "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
        "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
      },
      "Strong": {
        "defaultConsistencyLevel": "Strong"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "comments": "from https://docs.microsoft.com/en-us/azure/cosmos-db/manage-sql-with-resource-manager#azure-cosmos-account-with-autoscale-throughput",
      "name": "[variables('accountName')]",
      "apiVersion": "2020-04-01",
      "kind": "GlobalDocumentDB",
      "location": "[parameters('location')]",
      "properties": {
        "consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
        "copy": [
          {
            "name": "locations",
            "count": "[length(parameters('regions'))]",
            "input": {
              "locationName": "[parameters('regions')[copyIndex('locations',0)]]",
              "failoverPriority": "[copyIndex('locations',0)]",
              "isZoneRedundant": false
            }
          }
        ],
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": "[parameters('automaticFailover')]"
      },
      "tags": "[parameters('resourceTags')]"
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "name": "[concat(variables('accountName'), '/', parameters('databaseName'))]",
      "apiVersion": "2020-04-01",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('databaseName')]"
        },
        "options": "[parameters('autoscaleMaxThroughput')]"
      },
      "tags": "[parameters('resourceTags')]"
    },
    {
      "copy": {
        "name": "copyContainers",
        "count": "[length(parameters('containers'))]",
        "mode": "parallel"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "name": "[concat(variables('accountName'), '/', parameters('databaseName'), '/', parameters('containers')[copyIndex()].id)]",
      "apiVersion": "2020-04-01",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('accountName'), parameters('databaseName'))]"
      ],
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "resource": "[parameters('containers')[copyIndex()]]",
        "options": {
          "autoscaleSettings": {
            "maxThroughput": "[parameters('autoscaleMaxThroughput')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "dbName": {
      "type": "string",
      "value": "[variables('accountName')]"
    },
    "dbResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]"
    }
  }
}
